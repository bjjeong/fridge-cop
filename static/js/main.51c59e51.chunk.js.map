{"version":3,"sources":["components/Navbar.js","features/withNavbar.js","utils/helpers.js","pages/Home/components/RecipeListItem.js","actions/recipeActions.js","pages/Home/Home.js","pages/About.js","routes.js","App.js","reducers/recipeReducer.js","reducers/rootReducer.js","store/store.js","serviceWorker.js","index.js"],"names":["styles","boxShadow","backgroundColor","display","flexDirection","alignItems","fontSize","fontWeight","color","fontFamily","Navbar","style","container","Group","align","Heading","to","navText","icon","marginRight","text","minimal","href","target","height","withNavbar","Component","props","capitalize","string","charAt","toUpperCase","slice","width","margin","position","justifyContent","padding","borderRadius","top","left","right","bottom","objectFit","border","borderTopLeftRadius","borderTopRightRadius","flex","marginTop","textOverflow","overflow","whiteSpace","RecipeListItem","recipe","animationStyles","useState","flipped","setFlipped","image","usedIngredientCount","missedIngredientCount","title","usedIngredients","missedIngredients","useSpring","opacity","transform","config","mass","tension","friction","flipBack","interpolate","o","flipForward","t","AnimatedCard","animated","Card","div","onClick","interactive","card","zIndex","src","alt","imgContainer","topSection","titleText","bottomSection","Math","round","viewButton","outlined","e","preventDefault","stopPropagation","ingredientsContainer","usedText","map","used","name","join","missedText","missed","clearRecipes","createAction","getRecipes","createAsyncThunk","ingredients","a","id","imageType","likes","aisle","amount","meta","metaInformation","original","originalName","originalString","unit","unitLong","unitShort","unusedIngredients","marginBottom","Home","results","useSelector","state","recipes","dispatch","useDispatch","isLoading","setIsLoading","setIngredients","length","moveUp","setMoveUp","tagRef","useRef","trail","useTrail","from","handleSearch","className","cx","_moveUp","titleContainer","loop","typeSpeed","backSpeed","strings","shuffle","backDelay","fadeOut","fadeOutDelay","loopCount","showCursor","cursorChar","smartBackspace","helperText","inputContainer","input","ref","placeholder","values","onChange","item","onKeyDown","value","currentTarget","which","current","addTags","tagProps","inputProps","onFocus","onBlur","rightElement","large","intent","loading","disabled","submitButton","_hasResults","index","key","About","RouteWithSubRoutes","route","path","exact","render","component","routes","RenderRoutes","i","App","initialState","recipeReducer","createReducer","fulfilled","action","searchResults","payload","RootReducer","combineReducers","configureStore","reducer","rootReducer","middleware","thunk","logger","Boolean","window","location","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51c59e51.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar as Nav, Button, AnchorButton, Icon } from '@blueprintjs/core';\nimport routes from '../routes';\n\nconst Navbar = () => {\n    return (\n        <div>\n            <Nav style={styles.container}>\n                <Nav.Group align=\"left\">\n                    <Nav.Heading>\n                        <NavLink to=\"/\">\n                            <div\n                                style={{ ...styles.navText }}\n                            >\n                                <Icon icon=\"search\" style={{ marginRight: 8 }} />\n                                Fridge Cop\n                            </div>\n                        </NavLink>\n                    </Nav.Heading>\n                </Nav.Group>\n                <Nav.Group align=\"right\">\n                    <NavLink to=\"/about\">\n                        <Button\n                            text=\"About\"\n                            minimal\n                            style={styles.navText}\n                        />\n                    </NavLink>\n                    <AnchorButton\n                        href=\"https://linkedin.com/in/bjjeong\"\n                        target=\"_blank\"\n                        text=\"Contact\"\n                        minimal\n                        style={styles.navText}\n                    />\n                </Nav.Group>\n            </Nav>\n        </div>\n    );\n};\n\nconst styles = {};\n\nstyles.container = {\n    boxShadow: 'none',\n    backgroundColor: '#FFB697',\n};\n\nstyles.navText = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    fontSize: 'calc(10px + 1vmin)',\n    fontWeight: '600',\n    color: '#004968',\n    fontFamily: 'Maison,sans-serif',\n};\n\nexport default Navbar;\n","import React from 'react';\nimport Navbar from '../components/Navbar';\n\n\nconst withNavbar = (Component) => (props) => {\n    return (\n        <div style={styles.container}>\n            <Navbar />\n            <Component {...props} />\n        </div>\n    );\n};\n\nconst styles = {};\nstyles.container = {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n};\n\nexport default withNavbar;\n","export function capitalize(string) {\n    if (typeof string !== 'string') return null;\n    return string.charAt(0).toUpperCase() + string.slice(1);\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { animated, useSpring } from 'react-spring';\nimport { Card, Button } from '@blueprintjs/core';\nimport { capitalize } from '../../../utils/helpers';\n\nconst RecipeListItem = ({ recipe, animationStyles }) => {\n    const [flipped, setFlipped] = useState(false);\n    const {\n        image, usedIngredientCount, missedIngredientCount,\n        title, usedIngredients, missedIngredients,\n    } = recipe;\n\n    const { transform, opacity } = useSpring({\n        opacity: flipped ? 1 : 0,\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: { mass: 5, tension: 500, friction: 80 },\n    });\n    const flipBack = { opacity: opacity.interpolate((o) => 1 - o), transform };\n    const flipForward = { opacity, transform: transform.interpolate((t) => `${t} rotateX(180deg)`) };\n    const AnimatedCard = animated(Card);\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    return (\n        <animated.div\n            style={{ ...animationStyles, ...styles.container }}\n            onClick={() => setFlipped(!flipped)}\n        >\n            <AnimatedCard interactive style={{ ...flipBack, ...styles.card, zIndex: 2 }}>\n                <img src={image} alt={title} style={styles.imgContainer} />\n                <div style={styles.topSection}>\n                    <h2 style={styles.titleText}>{title}</h2>\n                </div>\n                <div style={styles.bottomSection}>\n                    <span>\n                        {`You have ${Math.round((usedIngredientCount / (usedIngredientCount + missedIngredientCount)) * 100)}% of the ingredients!`}\n                    </span>\n                    <Button\n                        text=\"View Ingredients\"\n                        onClick={() => setFlipped(!flipped)}\n                        style={styles.viewButton}\n                        outlined\n                    />\n                    <Button\n                        text=\"View Recipe\"\n                        onClick={handleClick}\n                        style={styles.viewButton}\n                        outlined\n                    />\n                </div>\n            </AnimatedCard>\n            <AnimatedCard interactive style={{ ...flipForward, ...styles.card, overflow: 'scroll' }}>\n                <div style={{ ...styles.topSection, padding: '0' }}>\n                    <h2 style={styles.titleText}>Ingredients</h2>\n                </div>\n                <div style={styles.ingredientsContainer}>\n                    <div style={styles.usedText}>\n                        {\n                            usedIngredients.map((used) => capitalize(used.name)).join(', ')\n                        }\n                    </div>\n                    <div style={styles.missedText}>\n                        {\n                            missedIngredients.map((missed) => capitalize(missed.name)).join(', ')\n                        }\n                    </div>\n                </div>\n            </AnimatedCard>\n        </animated.div>\n    );\n};\n\nconst styles = {};\n\nstyles.container = {\n    width: 300,\n    height: 280,\n    margin: '10px 10px 50px',\n};\n\nstyles.card = {\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 5,\n    width: 300,\n    height: 280,\n    borderRadius: 20,\n};\n\nstyles.imgContainer = {\n    position: 'absolute',\n    top: -40,\n    left: 'auto',\n    right: 'auto',\n    bottom: 0,\n    width: 100,\n    height: 100,\n    objectFit: 'cover',\n    borderRadius: 15,\n    border: '5px solid #fff',\n};\n\nstyles.topSection = {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: '#ffe1d5',\n    padding: '50px 10px 0',\n    color: '#282828',\n    width: '100%',\n    borderTopLeftRadius: 18,\n    borderTopRightRadius: 18,\n};\n\nstyles.bottomSection = {\n    fontFamily: 'Maison,sans-serif',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px 10px 10px',\n    width: '100%',\n};\n\nstyles.ingredientsContainer = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n    padding: 5,\n};\n\nstyles.viewButton = {\n    marginTop: 20,\n    padding: '10px 50px',\n};\n\nstyles.titleText = {\n    fontSize: 'calc(10px + 1vmin)',\n    fontFamily: 'Maison,sans-serif',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n};\n\nstyles.usedText = {\n    fontFamily: 'Maison,sans-serif',\n    color: '#38783B',\n};\n\nstyles.missedText = {\n    fontFamily: 'Maison,sans-serif',\n    color: '#5c7080',\n};\n\nRecipeListItem.propTypes = {\n    recipe: PropTypes.shape({\n        id: PropTypes.number,\n        title: PropTypes.string,\n        image: PropTypes.string,\n        missedIngredientCount: PropTypes.number,\n        missedIngredients: PropTypes.instanceOf(Array),\n        unusedIngredients: PropTypes.instanceOf(Array),\n        usedIngredientCount: PropTypes.number,\n        usedIngredients: PropTypes.instanceOf(Array),\n    }).isRequired,\n    animationStyles: PropTypes.object.isRequired,\n};\n\nexport default RecipeListItem;\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchRecipes } from '../api/recipeAPI';\n\nexport const clearRecipes = createAction('CLEAR_RECIPES');\n\nexport const getRecipes = createAsyncThunk(\n    'GET_RECIPES',\n    async (ingredients) => {\n        // ingredients must be comma-separated string\n        // const response = await fetchRecipes(ingredients.join(','));\n        // return response.data;\n\n        return [\n            {\n                id: 47950,\n                image: 'https://spoonacular.com/recipeImages/47950-312x231.jpg',\n                imageType: 'jpg',\n                likes: 35,\n                missedIngredientCount: 3,\n                missedIngredients: [\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19334,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19334,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19334,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19334,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19334,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19334,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n                title: 'Cinnamon Apple Crisp',\n                unusedIngredients: [],\n                usedIngredientCount: 2,\n                usedIngredients: [\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9003,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9003,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9003,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9003,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9003,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9003,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n            },\n            {\n                id: 47951,\n                image: 'https://spoonacular.com/recipeImages/47950-312x231.jpg',\n                imageType: 'jpg',\n                likes: 35,\n                missedIngredientCount: 3,\n                missedIngredients: [\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19335,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n                title: 'Cinnamon Pineapple Crisp',\n                unusedIngredients: [],\n                usedIngredientCount: 2,\n                usedIngredients: [\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9004,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n            },\n            {\n                id: 47952,\n                image: 'https://spoonacular.com/recipeImages/47950-312x231.jpg',\n                imageType: 'jpg',\n                likes: 35,\n                missedIngredientCount: 3,\n                missedIngredients: [\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19336,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n                title: 'Sugar Apple Crisp',\n                unusedIngredients: [],\n                usedIngredientCount: 2,\n                usedIngredients: [\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9005,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n            },\n            {\n                id: 47952,\n                image: 'https://spoonacular.com/recipeImages/47950-312x231.jpg',\n                imageType: 'jpg',\n                likes: 35,\n                missedIngredientCount: 3,\n                missedIngredients: [\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19336,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n                title: 'Sugar Apple Crisp',\n                unusedIngredients: [],\n                usedIngredientCount: 2,\n                usedIngredients: [\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9005,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n            },\n            {\n                id: 47952,\n                image: 'https://spoonacular.com/recipeImages/47950-312x231.jpg',\n                imageType: 'jpg',\n                likes: 35,\n                missedIngredientCount: 3,\n                missedIngredients: [\n                    {\n                        aisle: 'Baking',\n                        amount: 0.75,\n                        id: 19336,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/light-brown-sugar.jpg',\n                        meta: ['packed'],\n                        metaInformation: ['packed'],\n                        name: 'brown sugar',\n                        original: '3/4 cup firmly packed brown sugar',\n                        originalName: 'firmly packed brown sugar',\n                        originalString: '3/4 cup firmly packed brown sugar',\n                        unit: 'cup',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n                title: 'Sugar Apple Crisp',\n                unusedIngredients: [],\n                usedIngredientCount: 2,\n                usedIngredients: [\n                    {\n                        aisle: 'Produce',\n                        amount: 6,\n                        id: 9005,\n                        image: 'https://spoonacular.com/cdn/ingredients_100x100/apple.jpg',\n                        meta: ['cored', 'peeled', 'sliced'],\n                        metaInformation: ['cored', 'peeled', 'sliced'],\n                        name: 'apples',\n                        original: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        originalName: 'medium apples, peeled, cored, sliced',\n                        originalString: '6 medium (6 cups) apples, peeled, cored, sliced',\n                        unit: 'cups',\n                        unitLong: 'cups',\n                        unitShort: 'cup',\n                    },\n                ],\n            },\n        ];\n    },\n);\n","import React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, TagInput, FormGroup } from '@blueprintjs/core';\nimport { useTrail } from 'react-spring';\nimport Typed from 'react-typed';\nimport cx from 'classnames';\n\nimport RecipeListItem from './components/RecipeListItem';\nimport { getRecipes, clearRecipes } from '../../actions/recipeActions';\n\nconst Home = () => {\n    const results = useSelector((state) => state.recipes.recipes);\n    const dispatch = useDispatch();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [ingredients, setIngredients] = useState([]);\n    const [moveUp, setMoveUp] = useState(results.length);\n\n    const tagRef = useRef();\n    const config = { mass: 5, tension: 2000, friction: 500 };\n    const trail = useTrail(results.length, {\n        config,\n        opacity: results.length > 0 ? 1 : 0,\n        from: { opacity: 0 },\n    });\n\n    const handleKeyDown = (e) => {\n        const { value } = e.currentTarget;\n        if (e.which === 188 && value.length > 0) {\n            tagRef.current.addTags(value);\n\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n\n    const handleClearText = () => setIngredients([]);\n\n    const handleChange = (item) => setIngredients(item);\n\n    const handleSearch = async () => {\n        setIsLoading(true);\n        dispatch(clearRecipes());\n        await dispatch(getRecipes(ingredients));\n        setIsLoading(false);\n    };\n\n    const handleFocus = () => setMoveUp(true);\n\n    const handleBlur = () => {\n        if (ingredients.length === 0 && results.length === 0) {\n            setMoveUp(false);\n        }\n    };\n\n    return (\n        <div className=\"home__container\">\n            <div className={cx('content__container', {\n                _moveUp: moveUp,\n            })}\n            >\n                <div style={styles.titleContainer}>\n                    <span>What&apos;s in your&nbsp;</span>\n                    <Typed\n                        loop\n                        typeSpeed={75}\n                        backSpeed={50}\n                        strings={['fridge', 'freezer', 'cabinet', 'pantry']}\n                        shuffle={false}\n                        backDelay={2500}\n                        fadeOut={false}\n                        fadeOutDelay={100}\n                        loopCount={0}\n                        showCursor\n                        cursorChar=\"|\"\n                        smartBackspace={false}\n                    />\n                    <span>&nbsp;today?</span>\n                </div>\n                <FormGroup helperText=\"Press comma or Enter to add ingredients\" style={styles.inputContainer}>\n                    <TagInput\n                        style={styles.input}\n                        ref={tagRef}\n                        placeholder=\"Turkey, spinach, cheese...\"\n                        values={ingredients}\n                        onChange={handleChange}\n                        onKeyDown={handleKeyDown}\n                        tagProps={{ minimal: true, round: true }}\n                        inputProps={{ onFocus: handleFocus, onBlur: handleBlur }}\n                        rightElement={\n                            <Button\n                                onClick={handleClearText}\n                                icon=\"cross\"\n                                minimal\n                            />\n                        }\n                        large\n                    />\n                </FormGroup>\n                <Button\n                    onClick={handleSearch}\n                    intent=\"primary\"\n                    text=\"Search\"\n                    loading={isLoading}\n                    disabled={ingredients.length === 0}\n                    style={styles.submitButton}\n                    outlined\n                />\n            </div>\n            <div className={cx('result__container', {\n                _hasResults: results.length > 0,\n            })}\n            >\n                {\n                    trail.map((animationStyles, index) => (\n                        <RecipeListItem\n                            key={results[index].id}\n                            recipe={results[index]}\n                            animationStyles={animationStyles}\n                        />\n                    ))\n                }\n            </div>\n        </div>\n    );\n};\n\nconst styles = {};\n\nstyles.titleContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    fontSize: 'calc(5px + 5vmin)',\n    fontFamily: 'Maison,sans-serif',\n    fontWeight: 800,\n    color: '#004968',\n    marginBottom: 'calc(10px + 2vmin)',\n};\n\nstyles.inputContainer = {\n    width: 'calc(240px + 20vmin)',\n};\n\nstyles.input = {\n    borderRadius: 30,\n};\n\nstyles.submitButton = {\n    marginTop: 'calc(5px + 1vmin)',\n    padding: '10px 100px',\n    borderRadius: 30,\n    fontSize: 'calc(10px + 1vmin)',\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n    return (\n        <div style={styles.container}>\n\n        </div>\n    );\n};\n\nconst styles = {};\n\nstyles.container = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: '100%',\n    backgroundColor: '#FFB697',\n};\n\nexport default About;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport withNavbar from './features/withNavbar';\nimport Home from './pages/Home/Home';\nimport About from './pages/About';\n\nfunction RouteWithSubRoutes(route) {\n    return (\n        <Route\n            path={route.path}\n            exact={route.exact}\n            render={(props) => <route.component {...props} routes={route.routes} />}\n        />\n    );\n}\n\nexport function RenderRoutes({ routes }) {\n    return (\n        <Switch>\n            {routes.map((route, i) => <RouteWithSubRoutes key={route.key} {...route} />)}\n            <Route component={() => <h1>Not Found!</h1>} />\n        </Switch>\n    );\n}\n\nconst routes = [\n    {\n        path: '/',\n        key: 'ROOT',\n        exact: true,\n        component: withNavbar(Home),\n    },\n    {\n        path: '/about',\n        key: 'ABOUT',\n        exact: true,\n        component: withNavbar(About),\n    },\n    {\n        path: '/explore',\n        key: 'EXPLORE',\n        component: RenderRoutes,\n        routes: [\n            {\n                path: '/explore',\n                key: 'EXPLORE_ROOT',\n                exact: true,\n                component: withNavbar(Home),\n            },\n            {\n                path: '/app/page',\n                key: 'APP_PAGE',\n                exact: true,\n                component: () => <h1>App Page</h1>,\n            },\n        ],\n    },\n];\n\nexport default routes;\n","import routes, { RenderRoutes } from './routes';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return RenderRoutes({ routes });\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n    getRecipes,\n    clearRecipes,\n} from '../actions/recipeActions';\n\nconst initialState = {\n    recipes: [],\n};\n\nconst recipeReducer = createReducer(initialState, {\n    [clearRecipes]: () => {\n        return initialState;\n    },\n\n    [getRecipes.fulfilled]: (state, action) => {\n        const searchResults = action.payload;\n        return { ...state, recipes: [...searchResults] };\n    },\n});\n\nexport default recipeReducer;\n","import { combineReducers } from 'redux';\n\nimport recipeReducer from './recipeReducer';\n// import ErrorReducer from './ErrorReducer';\n\nconst RootReducer = combineReducers({\n    recipes: recipeReducer,\n});\n\nexport default RootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nexport default configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [thunk, logger],\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}